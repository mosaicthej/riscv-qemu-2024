TOOLCHAIN=riscv64-unknown-elf-
TOOLCHAINPATH=/usr/local/riscvmulti/bin/
AS=as # GNU assembler
LD=ld # GNU linker
# we don't need gcc, as we write the assembly ourselves

FLAGS32=-march=rv32i -mabi=ilp32
FLAGS64=-march=rv64gc -mabi=lp64d
# sets the architecture and ABI

LDFLAGS32=-m elf32lriscv --no-relax
LDFLAGS64=-m elf64lriscv --no-relax
# sets the emulation mode for the linker
# the --no-relax is needed so ld does't try to do things
# which require glibc stuff

.PHONY: all clean

binaries= testlists32 testlists64
# put names of all binaries here so easier to clean later

all: $(binaries)

testlists_32: testlists_32.o
	$(TOOLCHAIN)$(LD) $(LDFLAGS32) -o $@ $<
testlists_32.o: testlist32.S
	$(TOOLCHAIN)$(AS) $(FLAGS32) -g -o $@ $<

testlists_64: testlists_64.o
	$(TOOLCHAIN)$(LD) $(LDFLAGS64) -o $@ $<
testlists_64.o: testlist64.S
	$(TOOLCHAIN)$(AS) $(FLAGS64) -g -o $@ $<

clean:
	rm -f $(binaries) *.o *.s
# as a convention, we (encourage to) use .s (lower case) 
# for assembly files generated by compiler or assembler 
# (after preprocessing) 
# and .S (upper case) for assembly files written by hand